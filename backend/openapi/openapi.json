{
  "openapi": "3.1.0",
  "info": {
    "title": "Open Food Facts Taxonomy Editor API",
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Hello",
        "operationId": "hello__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "summary": "Pong",
        "description": "Check server health",
        "operationId": "pong_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "summary": "Get All Projects",
        "description": "List projects created in the Taxonomy Editor",
        "operationId": "get_all_projects_projects_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/Project" },
                  "type": "array",
                  "title": "Response Get All Projects Projects Get"
                }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/project": {
      "get": {
        "summary": "Get Project Info",
        "description": "Get information about a Taxonomy Editor project",
        "operationId": "get_project_info__taxonomy_name___branch__project_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/set-project-status": {
      "get": {
        "summary": "Set Project Status",
        "description": "Set the status of a Taxonomy Editor project",
        "operationId": "set_project_status__taxonomy_name___branch__set_project_status_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/ProjectStatus" },
                { "type": "null" }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/nodes": {
      "get": {
        "summary": "Find All Nodes",
        "description": "Get all nodes within taxonomy",
        "operationId": "find_all_nodes__taxonomy_name___branch__nodes_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Node",
        "description": "Deleting given node from a taxonomy",
        "operationId": "delete_node__taxonomy_name___branch__nodes_delete",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/rootentries": {
      "get": {
        "summary": "Find All Root Nodes",
        "description": "Get all root nodes within taxonomy",
        "operationId": "find_all_root_nodes__taxonomy_name___branch__rootentries_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/entry/{entry}": {
      "get": {
        "summary": "Find One Entry",
        "description": "Get entry corresponding to id within taxonomy",
        "operationId": "find_one_entry__taxonomy_name___branch__entry__entry__get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          },
          {
            "name": "entry",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Entry" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EntryNode" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Entry",
        "description": "Editing an entry in a taxonomy.\nNew key-value pairs can be added, old key-value pairs can be updated.\nURL will be of format '/entry/<id>'",
        "operationId": "edit_entry__taxonomy_name___branch__entry__entry__post",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          },
          {
            "name": "entry",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Entry" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/entry/{entry}/parents": {
      "get": {
        "summary": "Find One Entry Parents",
        "description": "Get parents for a entry corresponding to id within taxonomy",
        "operationId": "find_one_entry_parents__taxonomy_name___branch__entry__entry__parents_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          },
          {
            "name": "entry",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Entry" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/entry/{entry}/children": {
      "get": {
        "summary": "Find One Entry Children",
        "description": "Get children for a entry corresponding to id within taxonomy",
        "operationId": "find_one_entry_children__taxonomy_name___branch__entry__entry__children_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          },
          {
            "name": "entry",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Entry" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Entry Children",
        "description": "Editing an entry's children in a taxonomy.\nNew children can be added, old children can be removed.\nURL will be of format '/entry/<id>/children'",
        "operationId": "edit_entry_children__taxonomy_name___branch__entry__entry__children_post",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          },
          {
            "name": "entry",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Entry" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/synonym/{synonym}": {
      "get": {
        "summary": "Find One Synonym",
        "description": "Get synonym corresponding to id within taxonomy",
        "operationId": "find_one_synonym__taxonomy_name___branch__synonym__synonym__get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          },
          {
            "name": "synonym",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Synonym" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Synonyms",
        "description": "Editing a synonym in a taxonomy.\nNew key-value pairs can be added, old key-value pairs can be updated.\nURL will be of format '/synonym/<id>'",
        "operationId": "edit_synonyms__taxonomy_name___branch__synonym__synonym__post",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          },
          {
            "name": "synonym",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Synonym" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/synonym": {
      "get": {
        "summary": "Find All Synonyms",
        "description": "Get all synonyms within taxonomy",
        "operationId": "find_all_synonyms__taxonomy_name___branch__synonym_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/stopword/{stopword}": {
      "get": {
        "summary": "Find One Stopword",
        "description": "Get stopword corresponding to id within taxonomy",
        "operationId": "find_one_stopword__taxonomy_name___branch__stopword__stopword__get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          },
          {
            "name": "stopword",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Stopword" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Stopwords",
        "description": "Editing a stopword in a taxonomy.\nNew key-value pairs can be added, old key-value pairs can be updated.\nURL will be of format '/stopword/<id>'",
        "operationId": "edit_stopwords__taxonomy_name___branch__stopword__stopword__post",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          },
          {
            "name": "stopword",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Stopword" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/stopword": {
      "get": {
        "summary": "Find All Stopwords",
        "description": "Get all stopwords within taxonomy",
        "operationId": "find_all_stopwords__taxonomy_name___branch__stopword_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/header": {
      "get": {
        "summary": "Find Header",
        "description": "Get __header__ within taxonomy",
        "operationId": "find_header__taxonomy_name___branch__header_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Header",
        "description": "Editing the __header__ in a taxonomy.",
        "operationId": "edit_header__taxonomy_name___branch__header_post",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Header" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/footer": {
      "get": {
        "summary": "Find Footer",
        "description": "Get __footer__ within taxonomy",
        "operationId": "find_footer__taxonomy_name___branch__footer_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit Footer",
        "description": "Editing the __footer__ in a taxonomy.",
        "operationId": "edit_footer__taxonomy_name___branch__footer_post",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Footer" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/parsing_errors": {
      "get": {
        "summary": "Find All Errors",
        "description": "Get all errors within taxonomy",
        "operationId": "find_all_errors__taxonomy_name___branch__parsing_errors_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorNode" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/nodes/entry": {
      "get": {
        "summary": "Search Entry Nodes",
        "operationId": "search_entry_nodes__taxonomy_name___branch__nodes_entry_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The search query string to filter down the returned entry nodes.            Example: is:root language:en not(language):fr",
              "default": "",
              "title": "Q"
            },
            "description": "The search query string to filter down the returned entry nodes.            Example: is:root language:en not(language):fr"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1, "title": "Page" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntryNodeSearchResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/downloadexport": {
      "get": {
        "summary": "Export To Text File",
        "operationId": "export_to_text_file__taxonomy_name___branch__downloadexport_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/githubexport": {
      "get": {
        "summary": "Export To Github",
        "operationId": "export_to_github__taxonomy_name___branch__githubexport_get",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/import": {
      "post": {
        "summary": "Import From Github",
        "description": "Get taxonomy from Product Opener GitHub repository",
        "operationId": "import_from_github__taxonomy_name___branch__import_post",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/upload": {
      "post": {
        "summary": "Upload Taxonomy",
        "description": "Upload taxonomy file to be parsed",
        "operationId": "upload_taxonomy__taxonomy_name___branch__upload_post",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_taxonomy__taxonomy_name___branch__upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}/entry": {
      "post": {
        "summary": "Create Entry Node",
        "description": "Creating a new entry node in a taxonomy",
        "operationId": "create_entry_node__taxonomy_name___branch__entry_post",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EntryNodeCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/{taxonomy_name}/{branch}": {
      "delete": {
        "summary": "Delete Project",
        "description": "Delete a project",
        "operationId": "delete_project__taxonomy_name___branch__delete",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Branch" }
          },
          {
            "name": "taxonomy_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Taxonomy Name" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AncestorFilterSearchTerm": {
        "properties": {
          "filterType": { "const": "ancestor", "title": "Filtertype" },
          "filterValue": { "type": "string", "title": "Filtervalue" }
        },
        "type": "object",
        "required": ["filterType", "filterValue"],
        "title": "AncestorFilterSearchTerm"
      },
      "Body_upload_taxonomy__taxonomy_name___branch__upload_post": {
        "properties": {
          "file": { "type": "string", "format": "binary", "title": "File" },
          "description": { "type": "string", "title": "Description" }
        },
        "type": "object",
        "required": ["file", "description"],
        "title": "Body_upload_taxonomy__taxonomy_name___branch__upload_post"
      },
      "ChildFilterSearchTerm": {
        "properties": {
          "filterType": { "const": "child", "title": "Filtertype" },
          "filterValue": { "type": "string", "title": "Filtervalue" }
        },
        "type": "object",
        "required": ["filterType", "filterValue"],
        "title": "ChildFilterSearchTerm"
      },
      "DescendantFilterSearchTerm": {
        "properties": {
          "filterType": { "const": "descendant", "title": "Filtertype" },
          "filterValue": { "type": "string", "title": "Filtervalue" }
        },
        "type": "object",
        "required": ["filterType", "filterValue"],
        "title": "DescendantFilterSearchTerm"
      },
      "EntryNode": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "precedingLines": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Precedinglines"
          },
          "srcPosition": { "type": "integer", "title": "Srcposition" },
          "mainLanguage": { "type": "string", "title": "Mainlanguage" },
          "tags": {
            "additionalProperties": {
              "items": { "type": "string" },
              "type": "array"
            },
            "type": "object",
            "title": "Tags"
          },
          "properties": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Properties"
          },
          "comments": {
            "additionalProperties": {
              "items": { "type": "string" },
              "type": "array"
            },
            "type": "object",
            "title": "Comments"
          },
          "isExternal": {
            "type": "boolean",
            "title": "Isexternal",
            "default": false
          },
          "originalTaxonomy": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Originaltaxonomy"
          }
        },
        "type": "object",
        "required": [
          "id",
          "precedingLines",
          "srcPosition",
          "mainLanguage",
          "tags",
          "properties",
          "comments"
        ],
        "title": "EntryNode"
      },
      "EntryNodeCreate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "mainLanguageCode": { "type": "string", "title": "Mainlanguagecode" }
        },
        "type": "object",
        "required": ["name", "mainLanguageCode"],
        "title": "EntryNodeCreate"
      },
      "EntryNodeSearchResult": {
        "properties": {
          "q": { "type": "string", "title": "Q", "default": "" },
          "nodeCount": {
            "type": "integer",
            "title": "Nodecount",
            "default": 0
          },
          "pageCount": {
            "type": "integer",
            "title": "Pagecount",
            "default": 0
          },
          "filters": {
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/IsFilterSearchTerm" },
                { "$ref": "#/components/schemas/LanguageFilterSearchTerm" },
                { "$ref": "#/components/schemas/ParentFilterSearchTerm" },
                { "$ref": "#/components/schemas/ChildFilterSearchTerm" },
                { "$ref": "#/components/schemas/AncestorFilterSearchTerm" },
                { "$ref": "#/components/schemas/DescendantFilterSearchTerm" },
                { "$ref": "#/components/schemas/PropertyFilterSearchTerm" }
              ],
              "discriminator": {
                "propertyName": "filterType",
                "mapping": {
                  "ancestor": "#/components/schemas/AncestorFilterSearchTerm",
                  "child": "#/components/schemas/ChildFilterSearchTerm",
                  "descendant": "#/components/schemas/DescendantFilterSearchTerm",
                  "is": "#/components/schemas/IsFilterSearchTerm",
                  "language": "#/components/schemas/LanguageFilterSearchTerm",
                  "parent": "#/components/schemas/ParentFilterSearchTerm",
                  "property": "#/components/schemas/PropertyFilterSearchTerm"
                }
              }
            },
            "type": "array",
            "title": "Filters"
          },
          "nodes": {
            "items": { "$ref": "#/components/schemas/EntryNode" },
            "type": "array",
            "title": "Nodes"
          }
        },
        "type": "object",
        "title": "EntryNodeSearchResult"
      },
      "ErrorNode": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "taxonomyName": { "type": "string", "title": "Taxonomyname" },
          "branchName": { "type": "string", "title": "Branchname" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "warnings": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Warnings"
          },
          "errors": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "id",
          "taxonomyName",
          "branchName",
          "createdAt",
          "warnings",
          "errors"
        ],
        "title": "ErrorNode"
      },
      "Footer": { "properties": {}, "type": "object", "title": "Footer" },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Header": { "properties": {}, "type": "object", "title": "Header" },
      "IsFilterSearchTerm": {
        "properties": {
          "filterType": { "const": "is", "title": "Filtertype" },
          "filterValue": {
            "anyOf": [
              { "const": "root" },
              { "const": "external" },
              { "const": "not:external" }
            ],
            "title": "Filtervalue"
          }
        },
        "type": "object",
        "required": ["filterType", "filterValue"],
        "title": "IsFilterSearchTerm"
      },
      "LanguageFilterSearchTerm": {
        "properties": {
          "filterType": { "const": "language", "title": "Filtertype" },
          "filterValue": {
            "type": "string",
            "pattern": "^(not:)?[a-z]{2}$",
            "title": "Filtervalue"
          },
          "negated": {
            "type": "boolean",
            "title": "Negated",
            "readOnly": true
          },
          "language": {
            "type": "string",
            "title": "Language",
            "readOnly": true
          }
        },
        "type": "object",
        "required": ["filterType", "filterValue", "negated", "language"],
        "title": "LanguageFilterSearchTerm"
      },
      "ParentFilterSearchTerm": {
        "properties": {
          "filterType": { "const": "parent", "title": "Filtertype" },
          "filterValue": { "type": "string", "title": "Filtervalue" }
        },
        "type": "object",
        "required": ["filterType", "filterValue"],
        "title": "ParentFilterSearchTerm"
      },
      "Project": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "status": {
            "allOf": [{ "$ref": "#/components/schemas/ProjectStatus" }],
            "default": "LOADING"
          },
          "taxonomyName": { "type": "string", "title": "Taxonomyname" },
          "branchName": { "type": "string", "title": "Branchname" },
          "description": { "type": "string", "title": "Description" },
          "ownerName": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Ownername"
          },
          "isFromGithub": { "type": "boolean", "title": "Isfromgithub" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "errorsCount": {
            "type": "integer",
            "title": "Errorscount",
            "default": 0
          },
          "githubCheckoutCommitSha": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Githubcheckoutcommitsha"
          },
          "githubFileLatestSha": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Githubfilelatestsha"
          },
          "githubPrUrl": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Githubprurl"
          }
        },
        "type": "object",
        "required": [
          "id",
          "taxonomyName",
          "branchName",
          "description",
          "isFromGithub",
          "createdAt"
        ],
        "title": "Project"
      },
      "ProjectStatus": {
        "type": "string",
        "enum": ["OPEN", "EXPORTED", "LOADING", "FAILED"],
        "title": "ProjectStatus"
      },
      "PropertyFilterSearchTerm": {
        "properties": {
          "filterType": { "const": "property", "title": "Filtertype" },
          "filterValue": { "type": "string", "title": "Filtervalue" },
          "negated": {
            "type": "boolean",
            "title": "Negated",
            "readOnly": true
          },
          "inherited": {
            "type": "boolean",
            "title": "Inherited",
            "readOnly": true
          },
          "propertyName": {
            "type": "string",
            "title": "Propertyname",
            "readOnly": true
          },
          "propertyValue": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Propertyvalue",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "filterType",
          "filterValue",
          "negated",
          "inherited",
          "propertyName",
          "propertyValue"
        ],
        "title": "PropertyFilterSearchTerm"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
