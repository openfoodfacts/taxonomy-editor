version: "3.9"

services:
  neo4j:
    restart: ${RESTART_POLICY:-always}
    image: neo4j:5.14.0-community
    ports:
      # admin console
      - "${NEO4J_ADMIN_EXPOSE:-127.0.0.1:7474}:7474"
      # db bolt api
      - "${NEO4J_BOLT_EXPOSE:-127.0.0.1:7687}:7687"
    environment:
      # we should not expose it publicly, so no auth is ok
      - NEO4J_AUTH=none
      - NEO4J_PLUGINS=["apoc"]
      # memory configuration from .env
      - NEO4J_server_memory_heap_initial__size=${NEO4J_server_memory_heap_initial__size}
      - NEO4J_server_memory_heap_max__size=${NEO4J_server_memory_heap_max__size}
      - NEO4J_server_memory_pagecache_size=${NEO4J_server_memory_pagecache_size}
      - NEO4J_db_memory_transaction_total_max=${NEO4J_db_memory_transaction_total_max}
    volumes:
      # put data in a volume
      - neo4j-data:/data
      # put logs in a subdir
      - ./neo4j/logs:/logs
      # directory for imports
      - ./neo4j/import:/var/lib/neo4j/import
      # directory for neo4j imports
    command: neo4j
  taxonomy_api:
    restart: ${RESTART_POLICY:-always}
    image: ghcr.io/openfoodfacts/taxonomy-editor/taxonomy_api:${DOCKER_TAG}
    environment:
      NEO4J_URI: "bolt://neo4j:7687"
      # taken from .env
      GITHUB_PAT:
      REPO_URI:
      FRONTEND_URL:
      # make proxy headers be taken into account
      FORWARDED_ALLOW_IPS: "*"
  taxonomy_frontend:
    # this is the nginx frontend serving react static version or redirecting queries
    restart: ${RESTART_POLICY:-always}
    image: ghcr.io/openfoodfacts/taxonomy-editor/taxonomy_frontend:${DOCKER_TAG}
    depends_on:
      - taxonomy_api
    environment:
      # enabling prod config and disabling dev one
      PROD_UI_SUFFIX: ""
      DEV_UI_SUFFIX: "-dev"
      TAXONOMY_EDITOR_DOMAIN:
      PUBLIC_TAXONOMY_EDITOR_PORT:
      API_SCHEME:
    volumes:
      # Nginx, we use templates dir to be able to use environment vars
      - ./conf/nginx.conf:/etc/nginx/templates/default.conf.template
    ports:
      - ${TAXONOMY_EDITOR_EXPOSE:-127.0.0.1:8091}:80

volumes:
  neo4j-data:
